@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Bootstrap4

@model  X.PagedList.IPagedList<Automation.Models.GPO>

<div>
    <h4>Items per page</h4>
    <div class="btn-group" role="button" aria-label="Alert Switch">
        <button type="button" id="sort10" class="btn btn-info">10</button>
        <button type="button" id="sort15" class="btn btn-info">15</button>
        <button type="button" id="sort20" class="btn btn-info">20</button>
    </div>
</div>
<table class="table table-striped table-sm">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.ActionLink("Domain Name", "Index", new { sortOrder = ViewBag.CurrentSort == "domainname" ? "domainname_desc" : "domainname", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.CurrentSort == "name" ? "name_desc" : "name", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>
                @Html.ActionLink("Guid", "Index", new { sortOrder = ViewBag.CurrentSort == "guid" ? "guid_desc" : "guid", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>
                @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.CurrentSort == "status" ? "status_desc" : "status", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>
                @Html.ActionLink("User AD Version", "Index", new { sortOrder = ViewBag.CurrentSort == "useradver" ? "useradver_desc" : "useradver", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>
                @Html.ActionLink("User Sysvol Version", "Index", new { sortOrder = ViewBag.CurrentSort == "usersysvolver" ? "usersysvolver_desc" : "usersysvolver", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>

                @Html.ActionLink("Comp AD Version", "Index", new { sortOrder = ViewBag.CurrentSort == "compadver" ? "compadver_desc" : "compadver", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>
                @Html.ActionLink("Comp Sysvol Version", "Index", new { sortOrder = ViewBag.CurrentSort == "compsysvolver" ? "compsysvolver_desc" : "compsysvolver", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>
                @Html.ActionLink("GPO Created", "Index", new { sortOrder = ViewBag.CurrentSort == "gpocreated" ? "gpocreated_desc" : "gpocreated", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>
                @Html.ActionLink("GPO Modified", "Index", new { sortOrder = ViewBag.CurrentSort == "gpomodified" ? "gpomodified_desc" : "gpomodified", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
            <th>
                @Html.ActionLink("Created", "Index", new { sortOrder = ViewBag.CurrentSort == "created" ? "created_desc" : "created", page = Model.PageNumber, pageLength = ViewBag.PageLength }, new { @class = "SortButton", @style = "color:white" })
            </th>
        </tr>
    </thead>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DomainName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Guid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserADVer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserSysvolVer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompADVer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompSysvolVer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GPOCreated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GPOModified)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
            </tr>
        }

</table>


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
<div id="myPager" class="pagination">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, pageLength = ViewBag.PageLength }), Bootstrap4PagedListRenderOptions.Classic)
</div>