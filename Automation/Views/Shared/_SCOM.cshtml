@model IEnumerable<Automation.Models.SCOM>

<div class="ui-sortable sortable" >
    <div class="row">
        <div class="cardpanel panel-inverse clearfix resizable-card">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="#" class="btn btn-xs btn-icon btn-warning" data-click="panel-collapse" title="Collapse Panel"><i class="fas fa-minus-circle"></i></a>
                </div>
                <h4 class="panel-title">SCOM New Alerts</h4>
            </div>
            <div class="panel-body">
                <div id="SCOMNewLink" class="value">
                    @if (ViewBag.SCOMNew != null)
                    {
                        string SCOMNew = ViewBag.SCOMNew.ToString();
                        <p class="cardprimary-value p" data-toggle="modal" data-target="#SCOMNewModal">@ViewBag.SCOMNew</p>
                        <h2>New Alerts</h2>
                    }
                </div>
            </div>
        </div>

        <div class="cardpanel panel-inverse clearfix resizable-card">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="#" class="btn btn-xs btn-icon btn-warning" data-click="panel-collapse" title="Collapse Panel"><i class="fas fa-minus"></i></a>
                </div>
                <h4 class="panel-title">SCOM Critical</h4>
            </div>
            <div class="panel-body">
                <div class="value" id="SCOMClusterLink">
                    <div class="cardvalue">
                        <h1 class="cardprimary-value" data-toggle="modal" data-target="#SCOMNewModal">@Model.Count().ToString()</h1>
                        <h2>Total</h2>
                    </div>
                    <div class="cardcomparison_wrapper clearfix">
                        <div class="cardleft_comparison">
                            <div class="cardvalue-left">
                                <span class="fa-layers fa-fw fa-3x" style="background:lightgrey">
                                    <i class="fas fa-exclamation-triangle" style="color: orange;"></i>
                                    <span class="fa-layers-counter" style="background:black">@Model.Where(m => m.Cluster == true && m.HealthState == "Warning").ToList().Count().ToString()</span>
                                </span>
                            </div>
                        </div>
                        <div class="cardright_comparison">
                            <div class="cardvalue-right">
                                <span class="fa-layers fa-fw fa-3x" style="background:lightgrey">
                                    <i class="fas fa-exclamation-circle" style="color:red;"></i>
                                    <span class="fa-layers-counter" style="background:black">@Model.Where(m => m.Cluster == true && m.HealthState == "Error").ToList().Count().ToString()</span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="cardpanel panel-inverse clearfix resizable-card">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="#" class="btn btn-xs btn-icon btn-warning" data-click="panel-collapse" title="Collapse Panel"><i class="fas fa-minus"></i></a>
                </div>
                <h4 class="panel-title">SCOM Critical</h4>
            </div>
            <div class="panel-body">
                <div class="value" id="SCOMClusterLink">
                    <div class="cardvalue">
                        <h1 class="cardprimary-value" data-toggle="modal" data-target="#SCOMNewModal">@Model.Count().ToString()</h1>
                        <h2>Total</h2>
                    </div>
                    <div class="cardcomparison_wrapper clearfix">
                        <div class="cardleft_comparison">
                            <div class="cardvalue-left">
                                <span class="fa-layers fa-fw fa-3x" style="background:lightgrey">
                                    <i class="fas fa-exclamation-triangle" style="color: orange;"></i>
                                    <span class="fa-layers-counter" style="background:black">@Model.Where(m => m.Cluster == true && m.HealthState == "Warning").ToList().Count().ToString()</span>
                                </span>
                            </div>
                        </div>
                        <div class="cardright_comparison">
                            <div class="cardvalue-right">
                                <span class="fa-layers fa-fw fa-3x" style="background:lightgrey">
                                    <i class="fas fa-exclamation-circle" style="color:red;"></i>
                                    <span class="fa-layers-counter" style="background:black">@Model.Where(m => m.Cluster == true && m.HealthState == "Error").ToList().Count().ToString()</span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="cardpanel panel-inverse clearfix resizable-card">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="#" class="btn btn-xs btn-icon btn-warning" data-click="panel-collapse" title="Collapse Panel"><i class="fas fa-minus"></i></a>
                </div>
                <h4 class="panel-title">SCOM New Alerts</h4>
            </div>
            <div class="panel-body">
                <div id="SCOMNewLink" class="value">
                    @if (ViewBag.SCOMNew != null)
                    {
                        string SCOMNew = ViewBag.SCOMNew.ToString();
                        <h1 class="cardprimary-value" data-toggle="modal" data-target="#SCOMNewModal">@ViewBag.SCOMNew</h1>
                        <h2>New Alerts</h2>
                    }
                </div>
            </div>
        </div>
        <div class="cardpanel panel-inverse clearfix resizable-card">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="#" class="btn btn-xs btn-icon btn-warning" data-click="panel-collapse" title="Collapse Panel"><i class="fas fa-minus"></i></a>
                </div>
                <h4 class="panel-title">SCOM New Alerts</h4>
            </div>
            <div class="panel-body">
                <div id="SCOMNewLink" class="value">
                    @if (ViewBag.SCOMNew != null)
                    {
                        string SCOMNew = ViewBag.SCOMNew.ToString();
                        <h1 class="cardprimary-value" data-toggle="modal" data-target="#SCOMNewModal">@ViewBag.SCOMNew</h1>
                        <h2>New Alerts</h2>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

    <script type="text/javascript">

        $('.sortable').sortable({
            connectWith: ".sortable, .widgets",
            items: ".cardpanel",
            placeholder: "placeholder",
            cursor: "move",
            opacity: 0.5,
            handle: ".panel-heading",
        });

        $('.resizable-card').each(function () {
            var mainWidth = parseInt($(this).css('width'));
            var mainHeight = parseInt($(this).css('height'));
            $(this).resizable({
                ghost: true,
                minWidth: 200,
                minHeight: 255,
                resize: function (e, ui) {
                    var width = parseInt($(this).find('p').css('width'));
                    var height = parseInt($(this).find('p').css('height'));
                    if (width <= mainWidth && height <= mainHeight) {
                        var textSize = parseInt($(this).find('p').css('font-size'));
                        $(this).find('p').css({
                            'font-size': (textSize + 1) + 'px'
                        });
                    }
                    else {
                        var textSize = parseInt($(this).find('p').css('font-size'));
                        $(this).find('p').css({
                            'font-size': (textSize - 1) + 'px'
                        });
                    }
                }
            });
        });

      
        function balanceColumn1(col1, col2, col3) {
            if (col1.length > noRows) {
                if (col2.length < noRows) {
                    col1.first().appendTo('#col2');
                } else if (col2.length > noRows) {
                    col1.first().appendTo('#col3');
                }
            }
        }

        function balanceColumn2(col1, col2, col3) {
            if (col2.length > noRows) {
                if (col1.length < noRows) {
                    col2.first().appendTo('#col1');
                } else if (col1.length > noRows) {
                    col2.first().appendTo('#col3');
                }
            }
        }

        function balanceColumn3(col1, col2, col3) {
            if (col3.length > noRows) {
                if (col2.length < noRows) {
                    col3.first().appendTo('#col2');
                } else if (col2.length > noRows) {
                    col3.first().appendTo('#col1');
                }
            }
        }

        //by bobince - http://stackoverflow.com/a/698440/2033671
        function swapNodes(a, b) {
            var aparent = a.parentNode;
            var asibling = a.nextSibling === b ? a : a.nextSibling;
            b.parentNode.insertBefore(a, b);
            aparent.insertBefore(b, asibling);
        }

    </script>
